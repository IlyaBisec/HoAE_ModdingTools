<?xml version="1.0" encoding="utf-8"?>
<Project DefaultTargets="Build" ToolsVersion="Current" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <ItemGroup Label="ProjectConfigurations">
    <ProjectConfiguration Include="Debug|Win32">
      <Configuration>Debug</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release|Win32">
      <Configuration>Release</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
  </ItemGroup>
  <PropertyGroup Label="Globals">
    <VCProjectVersion>17.0</VCProjectVersion>
    <ProjectGuid>{1DBB276C-B1F6-4EAE-97E4-08DF0348E1FD}</ProjectGuid>
    <RootNamespace>boost</RootNamespace>
    <SccProjectName>SAK</SccProjectName>
    <SccAuxPath>SAK</SccAuxPath>
    <SccLocalPath>SAK</SccLocalPath>
    <SccProvider>SAK</SccProvider>
    <Keyword>Win32Proj</Keyword>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.Default.props" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'" Label="Configuration">
    <ConfigurationType>StaticLibrary</ConfigurationType>
    <PlatformToolset>v143</PlatformToolset>
    <CharacterSet>MultiByte</CharacterSet>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'" Label="Configuration">
    <ConfigurationType>StaticLibrary</ConfigurationType>
    <PlatformToolset>v143</PlatformToolset>
    <CharacterSet>MultiByte</CharacterSet>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.props" />
  <ImportGroup Label="ExtensionSettings">
  </ImportGroup>
  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'" Label="PropertySheets">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'" Label="PropertySheets">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <PropertyGroup Label="UserMacros" />
  <PropertyGroup>
    <_ProjectFileVersion>17.0.32819.101</_ProjectFileVersion>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">
    <OutDir>.\../../_debug/boost\</OutDir>
    <IntDir>.\../../_debug/boost\</IntDir>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">
    <OutDir>.\../../_release/boost\</OutDir>
    <IntDir>.\../../_release/boost\</IntDir>
  </PropertyGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">
    <ClCompile>
      <Optimization>Disabled</Optimization>
      <AdditionalIncludeDirectories>./;../;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <PreprocessorDefinitions>BOOST_SIGNALS_STATIC_LINK;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <MinimalRebuild>true</MinimalRebuild>
      <BasicRuntimeChecks>EnableFastChecks</BasicRuntimeChecks>
      <RuntimeLibrary>MultiThreadedDebug</RuntimeLibrary>
      <PrecompiledHeader />
      <WarningLevel>Level3</WarningLevel>
      <DebugInformationFormat>EditAndContinue</DebugInformationFormat>
      <DisableSpecificWarnings>4005;%(DisableSpecificWarnings)</DisableSpecificWarnings>
    </ClCompile>
    <Lib>
      <OutputFile>../../lib/boost.lib</OutputFile>
    </Lib>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">
    <ClCompile>
      <AdditionalIncludeDirectories>./;../;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <PreprocessorDefinitions>BOOST_SIGNALS_STATIC_LINK;BOOST_MSVC;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <RuntimeLibrary>MultiThreaded</RuntimeLibrary>
      <PrecompiledHeader />
      <WarningLevel>Level3</WarningLevel>
      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>
      <DisableSpecificWarnings>4005;%(DisableSpecificWarnings)</DisableSpecificWarnings>
    </ClCompile>
    <Lib>
      <OutputFile>../../lib_release/boostr.lib</OutputFile>
    </Lib>
  </ItemDefinitionGroup>
  <ItemGroup>
    <ClInclude Include="boost\aligned_storage.hpp" />
    <ClInclude Include="boost\any.hpp" />
    <ClInclude Include="boost\array.hpp" />
    <ClInclude Include="boost\assert.hpp" />
    <ClInclude Include="boost\assign.hpp" />
    <ClInclude Include="boost\bind.hpp" />
    <ClInclude Include="boost\bind\apply.hpp" />
    <ClInclude Include="boost\bind\arg.hpp" />
    <ClInclude Include="boost\bind\bind_cc.hpp" />
    <ClInclude Include="boost\bind\bind_mf_cc.hpp" />
    <ClInclude Include="boost\bind\bind_template.hpp" />
    <ClInclude Include="boost\bind\make_adaptable.hpp" />
    <ClInclude Include="boost\bind\mem_fn_cc.hpp" />
    <ClInclude Include="boost\bind\mem_fn_template.hpp" />
    <ClInclude Include="boost\bind\mem_fn_vw.hpp" />
    <ClInclude Include="boost\bind\placeholders.hpp" />
    <ClInclude Include="boost\bind\protect.hpp" />
    <ClInclude Include="boost\blank.hpp" />
    <ClInclude Include="boost\blank_fwd.hpp" />
    <ClInclude Include="boost\call_traits.hpp" />
    <ClInclude Include="boost\cast.hpp" />
    <ClInclude Include="boost\checked_delete.hpp" />
    <ClInclude Include="boost\compose.hpp" />
    <ClInclude Include="boost\compressed_pair.hpp" />
    <ClInclude Include="boost\concept_archetype.hpp" />
    <ClInclude Include="boost\concept_check.hpp" />
    <ClInclude Include="boost\config.hpp" />
    <ClInclude Include="boost\config\abi_prefix.hpp" />
    <ClInclude Include="boost\config\abi_suffix.hpp" />
    <ClInclude Include="boost\config\auto_link.hpp" />
    <ClInclude Include="boost\config\compiler\visualc.hpp" />
    <ClInclude Include="boost\config\platform\win32.hpp" />
    <ClInclude Include="boost\config\posix_features.hpp" />
    <ClInclude Include="boost\config\requires_threads.hpp" />
    <ClInclude Include="boost\config\select_compiler_config.hpp" />
    <ClInclude Include="boost\config\select_platform_config.hpp" />
    <ClInclude Include="boost\config\select_stdlib_config.hpp" />
    <ClInclude Include="boost\config\stdlib\dinkumware.hpp" />
    <ClInclude Include="boost\config\stdlib\libcomo.hpp" />
    <ClInclude Include="boost\config\stdlib\libstdcpp3.hpp" />
    <ClInclude Include="boost\config\stdlib\modena.hpp" />
    <ClInclude Include="boost\config\stdlib\msl.hpp" />
    <ClInclude Include="boost\config\stdlib\roguewave.hpp" />
    <ClInclude Include="boost\config\stdlib\sgi.hpp" />
    <ClInclude Include="boost\config\stdlib\stlport.hpp" />
    <ClInclude Include="boost\config\stdlib\vacpp.hpp" />
    <ClInclude Include="boost\config\suffix.hpp" />
    <ClInclude Include="boost\config\user.hpp" />
    <ClInclude Include="boost\counting_iterator.hpp" />
    <ClInclude Include="boost\crc.hpp" />
    <ClInclude Include="boost\cregex.hpp" />
    <ClInclude Include="boost\cstdint.hpp" />
    <ClInclude Include="boost\cstdlib.hpp" />
    <ClInclude Include="boost\current_function.hpp" />
    <ClInclude Include="boost\detail\algorithm.hpp" />
    <ClInclude Include="boost\detail\allocator.hpp" />
    <ClInclude Include="boost\detail\allocator_utilities.hpp" />
    <ClInclude Include="boost\detail\atomic_count.hpp" />
    <ClInclude Include="boost\detail\atomic_count_gcc.hpp" />
    <ClInclude Include="boost\detail\atomic_count_linux.hpp" />
    <ClInclude Include="boost\detail\atomic_count_pthreads.hpp" />
    <ClInclude Include="boost\detail\atomic_count_win32.hpp" />
    <ClInclude Include="boost\detail\binary_search.hpp" />
    <ClInclude Include="boost\detail\call_traits.hpp" />
    <ClInclude Include="boost\detail\catch_exceptions.hpp" />
    <ClInclude Include="boost\detail\compressed_pair.hpp" />
    <ClInclude Include="boost\detail\dynamic_bitset.hpp" />
    <ClInclude Include="boost\detail\indirect_traits.hpp" />
    <ClInclude Include="boost\detail\in_place_factory.hpp" />
    <ClInclude Include="boost\detail\in_place_factory_prefix.hpp" />
    <ClInclude Include="boost\detail\in_place_factory_suffix.hpp" />
    <ClInclude Include="boost\detail\is_function_ref_tester.hpp" />
    <ClInclude Include="boost\detail\is_incrementable.hpp" />
    <ClInclude Include="boost\detail\iterator.hpp" />
    <ClInclude Include="boost\detail\lightweight_mutex.hpp" />
    <ClInclude Include="boost\detail\lightweight_test.hpp" />
    <ClInclude Include="boost\detail\limits.hpp" />
    <ClInclude Include="boost\detail\lwm_gcc.hpp" />
    <ClInclude Include="boost\detail\lwm_irix.hpp" />
    <ClInclude Include="boost\detail\lwm_linux.hpp" />
    <ClInclude Include="boost\detail\lwm_nop.hpp" />
    <ClInclude Include="boost\detail\lwm_pthreads.hpp" />
    <ClInclude Include="boost\detail\lwm_win32.hpp" />
    <ClInclude Include="boost\detail\lwm_win32_cs.hpp" />
    <ClInclude Include="boost\detail\lwm_win32_nt.hpp" />
    <ClInclude Include="boost\detail\named_template_params.hpp" />
    <ClInclude Include="boost\detail\none.hpp" />
    <ClInclude Include="boost\detail\none_t.hpp" />
    <ClInclude Include="boost\detail\no_exceptions_support.hpp" />
    <ClInclude Include="boost\detail\numeric_traits.hpp" />
    <ClInclude Include="boost\detail\ob_call_traits.hpp" />
    <ClInclude Include="boost\detail\ob_compressed_pair.hpp" />
    <ClInclude Include="boost\detail\quick_allocator.hpp" />
    <ClInclude Include="boost\detail\reference_content.hpp" />
    <ClInclude Include="boost\detail\select_type.hpp" />
    <ClInclude Include="boost\detail\shared_array_nmt.hpp" />
    <ClInclude Include="boost\detail\shared_count.hpp" />
    <ClInclude Include="boost\detail\shared_ptr_nmt.hpp" />
    <ClInclude Include="boost\detail\templated_streams.hpp" />
    <ClInclude Include="boost\detail\typed_in_place_factory.hpp" />
    <ClInclude Include="boost\detail\workaround.hpp" />
    <ClInclude Include="boost\dynamic_bitset.hpp" />
    <ClInclude Include="boost\dynamic_bitset_fwd.hpp" />
    <ClInclude Include="boost\enable_shared_from_this.hpp" />
    <ClInclude Include="boost\filesystem\config.hpp" />
    <ClInclude Include="boost\filesystem\convenience.hpp" />
    <ClInclude Include="boost\filesystem\exception.hpp" />
    <ClInclude Include="boost\filesystem\fstream.hpp" />
    <ClInclude Include="boost\filesystem\operations.hpp" />
    <ClInclude Include="boost\filesystem\path.hpp" />
    <ClInclude Include="boost\format.hpp" />
    <ClInclude Include="boost\function.hpp" />
    <ClInclude Include="boost\functional.hpp" />
    <ClInclude Include="boost\function\detail\function_iterate.hpp" />
    <ClInclude Include="boost\function\detail\maybe_include.hpp" />
    <ClInclude Include="boost\function\detail\prologue.hpp" />
    <ClInclude Include="boost\function\function0.hpp" />
    <ClInclude Include="boost\function\function1.hpp" />
    <ClInclude Include="boost\function\function10.hpp" />
    <ClInclude Include="boost\function\function2.hpp" />
    <ClInclude Include="boost\function\function3.hpp" />
    <ClInclude Include="boost\function\function4.hpp" />
    <ClInclude Include="boost\function\function5.hpp" />
    <ClInclude Include="boost\function\function6.hpp" />
    <ClInclude Include="boost\function\function7.hpp" />
    <ClInclude Include="boost\function\function8.hpp" />
    <ClInclude Include="boost\function\function9.hpp" />
    <ClInclude Include="boost\function\function_base.hpp" />
    <ClInclude Include="boost\function\function_template.hpp" />
    <ClInclude Include="boost\function_equal.hpp" />
    <ClInclude Include="boost\function_output_iterator.hpp" />
    <ClInclude Include="boost\generator_iterator.hpp" />
    <ClInclude Include="boost\get_pointer.hpp" />
    <ClInclude Include="boost\half_open_range.hpp" />
    <ClInclude Include="boost\implicit_cast.hpp" />
    <ClInclude Include="boost\indirect_reference.hpp" />
    <ClInclude Include="boost\integer.hpp" />
    <ClInclude Include="boost\integer_fwd.hpp" />
    <ClInclude Include="boost\integer_traits.hpp" />
    <ClInclude Include="boost\intrusive_ptr.hpp" />
    <ClInclude Include="boost\io_fwd.hpp" />
    <ClInclude Include="boost\iterator.hpp" />
    <ClInclude Include="boost\iterator\counting_iterator.hpp" />
    <ClInclude Include="boost\iterator\detail\any_conversion_eater.hpp" />
    <ClInclude Include="boost\iterator\detail\categories.hpp" />
    <ClInclude Include="boost\iterator\detail\config_def.hpp" />
    <ClInclude Include="boost\iterator\detail\config_undef.hpp" />
    <ClInclude Include="boost\iterator\detail\enable_if.hpp" />
    <ClInclude Include="boost\iterator\detail\facade_iterator_category.hpp" />
    <ClInclude Include="boost\iterator\detail\minimum_category.hpp" />
    <ClInclude Include="boost\iterator\filter_iterator.hpp" />
    <ClInclude Include="boost\iterator\indirect_iterator.hpp" />
    <ClInclude Include="boost\iterator\interoperable.hpp" />
    <ClInclude Include="boost\iterator\is_lvalue_iterator.hpp" />
    <ClInclude Include="boost\iterator\is_readable_iterator.hpp" />
    <ClInclude Include="boost\iterator\iterator_adaptor.hpp" />
    <ClInclude Include="boost\iterator\iterator_archetypes.hpp" />
    <ClInclude Include="boost\iterator\iterator_categories.hpp" />
    <ClInclude Include="boost\iterator\iterator_concepts.hpp" />
    <ClInclude Include="boost\iterator\iterator_facade.hpp" />
    <ClInclude Include="boost\iterator\iterator_traits.hpp" />
    <ClInclude Include="boost\iterator\new_iterator_tests.hpp" />
    <ClInclude Include="boost\iterator\permutation_iterator.hpp" />
    <ClInclude Include="boost\iterator\reverse_iterator.hpp" />
    <ClInclude Include="boost\iterator\transform_iterator.hpp" />
    <ClInclude Include="boost\iterator\zip_iterator.hpp" />
    <ClInclude Include="boost\iterator_adaptors.hpp" />
    <ClInclude Include="boost\last_value.hpp" />
    <ClInclude Include="boost\lexical_cast.hpp" />
    <ClInclude Include="boost\limits.hpp" />
    <ClInclude Include="boost\math_fwd.hpp" />
    <ClInclude Include="boost\mem_fn.hpp" />
    <ClInclude Include="boost\min_rand.hpp" />
    <ClInclude Include="boost\mpl\advance.hpp" />
    <ClInclude Include="boost\mpl\advance_fwd.hpp" />
    <ClInclude Include="boost\mpl\alias.hpp" />
    <ClInclude Include="boost\mpl\always.hpp" />
    <ClInclude Include="boost\mpl\and.hpp" />
    <ClInclude Include="boost\mpl\apply.hpp" />
    <ClInclude Include="boost\mpl\apply_fwd.hpp" />
    <ClInclude Include="boost\mpl\apply_if.hpp" />
    <ClInclude Include="boost\mpl\apply_wrap.hpp" />
    <ClInclude Include="boost\mpl\arg.hpp" />
    <ClInclude Include="boost\mpl\arg_fwd.hpp" />
    <ClInclude Include="boost\mpl\arithmetic.hpp" />
    <ClInclude Include="boost\mpl\assert.hpp" />
    <ClInclude Include="boost\mpl\assert_is_same.hpp" />
    <ClInclude Include="boost\mpl\as_sequence.hpp" />
    <ClInclude Include="boost\mpl\at.hpp" />
    <ClInclude Include="boost\mpl\at_fwd.hpp" />
    <ClInclude Include="boost\mpl\aux_\adl_barrier.hpp" />
    <ClInclude Include="boost\mpl\aux_\advance_backward.hpp" />
    <ClInclude Include="boost\mpl\aux_\advance_forward.hpp" />
    <ClInclude Include="boost\mpl\aux_\algorithm_namespace.hpp" />
    <ClInclude Include="boost\mpl\aux_\apply.hpp" />
    <ClInclude Include="boost\mpl\aux_\apply_1st.hpp" />
    <ClInclude Include="boost\mpl\aux_\arg_typedef.hpp" />
    <ClInclude Include="boost\mpl\aux_\arithmetic_op.hpp" />
    <ClInclude Include="boost\mpl\aux_\arity.hpp" />
    <ClInclude Include="boost\mpl\aux_\arity_spec.hpp" />
    <ClInclude Include="boost\mpl\aux_\at_impl.hpp" />
    <ClInclude Include="boost\mpl\aux_\back_impl.hpp" />
    <ClInclude Include="boost\mpl\aux_\basic_bind.hpp" />
    <ClInclude Include="boost\mpl\aux_\begin_end_impl.hpp" />
    <ClInclude Include="boost\mpl\aux_\bool_value_wknd.hpp" />
    <ClInclude Include="boost\mpl\aux_\clear_impl.hpp" />
    <ClInclude Include="boost\mpl\aux_\common_name_wknd.hpp" />
    <ClInclude Include="boost\mpl\aux_\comparison_op.hpp" />
    <ClInclude Include="boost\mpl\aux_\config\arrays.hpp" />
    <ClInclude Include="boost\mpl\aux_\config\bind.hpp" />
    <ClInclude Include="boost\mpl\aux_\config\compiler.hpp" />
    <ClInclude Include="boost\mpl\aux_\config\ctps.hpp" />
    <ClInclude Include="boost\mpl\aux_\config\dependent_nttp.hpp" />
    <ClInclude Include="boost\mpl\aux_\config\dmc_ambiguous_ctps.hpp" />
    <ClInclude Include="boost\mpl\aux_\config\dtp.hpp" />
    <ClInclude Include="boost\mpl\aux_\config\eti.hpp" />
    <ClInclude Include="boost\mpl\aux_\config\forwarding.hpp" />
    <ClInclude Include="boost\mpl\aux_\config\gcc.hpp" />
    <ClInclude Include="boost\mpl\aux_\config\has_apply.hpp" />
    <ClInclude Include="boost\mpl\aux_\config\has_xxx.hpp" />
    <ClInclude Include="boost\mpl\aux_\config\integral.hpp" />
    <ClInclude Include="boost\mpl\aux_\config\intel.hpp" />
    <ClInclude Include="boost\mpl\aux_\config\internals.hpp" />
    <ClInclude Include="boost\mpl\aux_\config\lambda.hpp" />
    <ClInclude Include="boost\mpl\aux_\config\msvc.hpp" />
    <ClInclude Include="boost\mpl\aux_\config\msvc_typename.hpp" />
    <ClInclude Include="boost\mpl\aux_\config\nttp.hpp" />
    <ClInclude Include="boost\mpl\aux_\config\operators.hpp" />
    <ClInclude Include="boost\mpl\aux_\config\overload_resolution.hpp" />
    <ClInclude Include="boost\mpl\aux_\config\preprocessor.hpp" />
    <ClInclude Include="boost\mpl\aux_\config\static_constant.hpp" />
    <ClInclude Include="boost\mpl\aux_\config\tag_protocol.hpp" />
    <ClInclude Include="boost\mpl\aux_\config\ttp.hpp" />
    <ClInclude Include="boost\mpl\aux_\config\typeof.hpp" />
    <ClInclude Include="boost\mpl\aux_\config\use_preprocessed.hpp" />
    <ClInclude Include="boost\mpl\aux_\config\vector.hpp" />
    <ClInclude Include="boost\mpl\aux_\config\workaround.hpp" />
    <ClInclude Include="boost\mpl\aux_\contains_impl.hpp" />
    <ClInclude Include="boost\mpl\aux_\copy_if_op.hpp" />
    <ClInclude Include="boost\mpl\aux_\copy_op.hpp" />
    <ClInclude Include="boost\mpl\aux_\count_args.hpp" />
    <ClInclude Include="boost\mpl\aux_\count_impl.hpp" />
    <ClInclude Include="boost\mpl\aux_\debug_print.hpp" />
    <ClInclude Include="boost\mpl\aux_\deref_wknd.hpp" />
    <ClInclude Include="boost\mpl\aux_\empty_impl.hpp" />
    <ClInclude Include="boost\mpl\aux_\erase_impl.hpp" />
    <ClInclude Include="boost\mpl\aux_\erase_key_impl.hpp" />
    <ClInclude Include="boost\mpl\aux_\filter_iter.hpp" />
    <ClInclude Include="boost\mpl\aux_\find_if_pred.hpp" />
    <ClInclude Include="boost\mpl\aux_\fold_backward_impl.hpp" />
    <ClInclude Include="boost\mpl\aux_\fold_backward_impl_body.hpp" />
    <ClInclude Include="boost\mpl\aux_\fold_impl.hpp" />
    <ClInclude Include="boost\mpl\aux_\fold_impl_body.hpp" />
    <ClInclude Include="boost\mpl\aux_\fold_op.hpp" />
    <ClInclude Include="boost\mpl\aux_\fold_pred.hpp" />
    <ClInclude Include="boost\mpl\aux_\front_impl.hpp" />
    <ClInclude Include="boost\mpl\aux_\full_lambda.hpp" />
    <ClInclude Include="boost\mpl\aux_\has_apply.hpp" />
    <ClInclude Include="boost\mpl\aux_\has_begin.hpp" />
    <ClInclude Include="boost\mpl\aux_\has_key_impl.hpp" />
    <ClInclude Include="boost\mpl\aux_\has_rebind.hpp" />
    <ClInclude Include="boost\mpl\aux_\has_size.hpp" />
    <ClInclude Include="boost\mpl\aux_\has_tag.hpp" />
    <ClInclude Include="boost\mpl\aux_\has_type.hpp" />
    <ClInclude Include="boost\mpl\aux_\has_xxx.hpp" />
    <ClInclude Include="boost\mpl\aux_\ice_cast.hpp" />
    <ClInclude Include="boost\mpl\aux_\include_preprocessed.hpp" />
    <ClInclude Include="boost\mpl\aux_\inserter_algorithm.hpp" />
    <ClInclude Include="boost\mpl\aux_\insert_impl.hpp" />
    <ClInclude Include="boost\mpl\aux_\insert_range_impl.hpp" />
    <ClInclude Include="boost\mpl\aux_\integral_wrapper.hpp" />
    <ClInclude Include="boost\mpl\aux_\is_msvc_eti_arg.hpp" />
    <ClInclude Include="boost\mpl\aux_\iterator_category.hpp" />
    <ClInclude Include="boost\mpl\aux_\iterator_names.hpp" />
    <ClInclude Include="boost\mpl\aux_\iter_apply.hpp" />
    <ClInclude Include="boost\mpl\aux_\iter_distance.hpp" />
    <ClInclude Include="boost\mpl\aux_\iter_fold_backward_impl.hpp" />
    <ClInclude Include="boost\mpl\aux_\iter_fold_if_impl.hpp" />
    <ClInclude Include="boost\mpl\aux_\iter_fold_impl.hpp" />
    <ClInclude Include="boost\mpl\aux_\iter_push_front.hpp" />
    <ClInclude Include="boost\mpl\aux_\joint_iter.hpp" />
    <ClInclude Include="boost\mpl\aux_\lambda_arity_param.hpp" />
    <ClInclude Include="boost\mpl\aux_\lambda_expr.hpp" />
    <ClInclude Include="boost\mpl\aux_\lambda_no_ctps.hpp" />
    <ClInclude Include="boost\mpl\aux_\lambda_spec.hpp" />
    <ClInclude Include="boost\mpl\aux_\lambda_support.hpp" />
    <ClInclude Include="boost\mpl\aux_\largest_int.hpp" />
    <ClInclude Include="boost\mpl\aux_\logical_op.hpp" />
    <ClInclude Include="boost\mpl\aux_\metafunction.hpp" />
    <ClInclude Include="boost\mpl\aux_\msvc_dtw.hpp" />
    <ClInclude Include="boost\mpl\aux_\msvc_eti_base.hpp" />
    <ClInclude Include="boost\mpl\aux_\msvc_is_class.hpp" />
    <ClInclude Include="boost\mpl\aux_\msvc_never_true.hpp" />
    <ClInclude Include="boost\mpl\aux_\msvc_type.hpp" />
    <ClInclude Include="boost\mpl\aux_\na.hpp" />
    <ClInclude Include="boost\mpl\aux_\na_spec.hpp" />
    <ClInclude Include="boost\mpl\aux_\nested_type_wknd.hpp" />
    <ClInclude Include="boost\mpl\aux_\next.hpp" />
    <ClInclude Include="boost\mpl\aux_\nttp_decl.hpp" />
    <ClInclude Include="boost\mpl\aux_\numeric_op.hpp" />
    <ClInclude Include="boost\mpl\aux_\O1_size_impl.hpp" />
    <ClInclude Include="boost\mpl\aux_\order_impl.hpp" />
    <ClInclude Include="boost\mpl\aux_\overload_names.hpp" />
    <ClInclude Include="boost\mpl\aux_\partition_op.hpp" />
    <ClInclude Include="boost\mpl\aux_\pop_back_impl.hpp" />
    <ClInclude Include="boost\mpl\aux_\pop_front_impl.hpp" />
    <ClInclude Include="boost\mpl\aux_\pred.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\msvc70\advance_backward.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\msvc70\advance_forward.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\msvc70\and.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\msvc70\apply.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\msvc70\apply_fwd.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\msvc70\apply_wrap.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\msvc70\arg.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\msvc70\basic_bind.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\msvc70\bind.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\msvc70\bind_fwd.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\msvc70\bitand.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\msvc70\bitor.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\msvc70\bitxor.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\msvc70\divides.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\msvc70\equal_to.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\msvc70\fold_backward_impl.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\msvc70\fold_impl.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\msvc70\full_lambda.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\msvc70\greater.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\msvc70\greater_equal.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\msvc70\inherit.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\msvc70\iter_fold_backward_impl.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\msvc70\iter_fold_if_impl.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\msvc70\iter_fold_impl.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\msvc70\lambda_helper.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\msvc70\lambda_no_ctps.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\msvc70\less.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\msvc70\less_equal.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\msvc70\list.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\msvc70\list_c.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\msvc70\map.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\msvc70\minus.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\msvc70\modulus.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\msvc70\not_equal_to.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\msvc70\or.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\msvc70\placeholders.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\msvc70\plus.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\msvc70\quote.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\msvc70\reverse_fold_impl.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\msvc70\reverse_iter_fold_impl.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\msvc70\set.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\msvc70\shift_left.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\msvc70\shift_right.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\msvc70\template_arity.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\msvc70\times.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\msvc70\unpack_args.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\msvc70\vector.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\msvc70\vector_c.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\plain\advance_backward.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\plain\advance_forward.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\plain\and.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\plain\apply.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\plain\apply_fwd.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\plain\apply_wrap.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\plain\arg.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\plain\basic_bind.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\plain\bind.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\plain\bind_fwd.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\plain\bitand.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\plain\bitor.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\plain\bitxor.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\plain\divides.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\plain\equal_to.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\plain\fold_backward_impl.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\plain\fold_impl.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\plain\full_lambda.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\plain\greater.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\plain\greater_equal.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\plain\inherit.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\plain\iter_fold_backward_impl.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\plain\iter_fold_if_impl.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\plain\iter_fold_impl.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\plain\lambda_helper.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\plain\lambda_no_ctps.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\plain\less.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\plain\less_equal.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\plain\list.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\plain\list_c.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\plain\map.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\plain\minus.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\plain\modulus.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\plain\not_equal_to.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\plain\or.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\plain\placeholders.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\plain\plus.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\plain\quote.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\plain\reverse_fold_impl.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\plain\reverse_iter_fold_impl.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\plain\set.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\plain\shift_left.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\plain\shift_right.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\plain\template_arity.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\plain\times.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\plain\unpack_args.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\plain\vector.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\plain\vector_c.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessor\add.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessor\default_params.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessor\def_params_tail.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessor\enum.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessor\ext_params.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessor\filter_params.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessor\is_seq.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessor\params.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessor\partial_spec_params.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessor\range.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessor\repeat.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessor\sub.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessor\token_equal.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessor\tuple.hpp" />
    <ClInclude Include="boost\mpl\aux_\prior.hpp" />
    <ClInclude Include="boost\mpl\aux_\ptr_to_ref.hpp" />
    <ClInclude Include="boost\mpl\aux_\push_back_impl.hpp" />
    <ClInclude Include="boost\mpl\aux_\push_front_impl.hpp" />
    <ClInclude Include="boost\mpl\aux_\range_c\back.hpp" />
    <ClInclude Include="boost\mpl\aux_\range_c\begin_end.hpp" />
    <ClInclude Include="boost\mpl\aux_\range_c\empty.hpp" />
    <ClInclude Include="boost\mpl\aux_\range_c\front.hpp" />
    <ClInclude Include="boost\mpl\aux_\range_c\iterator.hpp" />
    <ClInclude Include="boost\mpl\aux_\range_c\O1_size.hpp" />
    <ClInclude Include="boost\mpl\aux_\range_c\size.hpp" />
    <ClInclude Include="boost\mpl\aux_\range_c\tag.hpp" />
    <ClInclude Include="boost\mpl\aux_\reverse_fold_impl.hpp" />
    <ClInclude Include="boost\mpl\aux_\reverse_fold_impl_body.hpp" />
    <ClInclude Include="boost\mpl\aux_\reverse_iter_fold_impl.hpp" />
    <ClInclude Include="boost\mpl\aux_\select1st_wknd.hpp" />
    <ClInclude Include="boost\mpl\aux_\select2nd_wknd.hpp" />
    <ClInclude Include="boost\mpl\aux_\sequence_tag.hpp" />
    <ClInclude Include="boost\mpl\aux_\sequence_wrapper.hpp" />
    <ClInclude Include="boost\mpl\aux_\shift_op.hpp" />
    <ClInclude Include="boost\mpl\aux_\single_element_iter.hpp" />
    <ClInclude Include="boost\mpl\aux_\size_impl.hpp" />
    <ClInclude Include="boost\mpl\aux_\sort_impl.hpp" />
    <ClInclude Include="boost\mpl\aux_\static_cast.hpp" />
    <ClInclude Include="boost\mpl\aux_\template_arity.hpp" />
    <ClInclude Include="boost\mpl\aux_\template_arity_fwd.hpp" />
    <ClInclude Include="boost\mpl\aux_\test.hpp" />
    <ClInclude Include="boost\mpl\aux_\traits_lambda_spec.hpp" />
    <ClInclude Include="boost\mpl\aux_\transform_iter.hpp" />
    <ClInclude Include="boost\mpl\aux_\typeof.hpp" />
    <ClInclude Include="boost\mpl\aux_\type_wrapper.hpp" />
    <ClInclude Include="boost\mpl\aux_\unwrap.hpp" />
    <ClInclude Include="boost\mpl\aux_\value_wknd.hpp" />
    <ClInclude Include="boost\mpl\aux_\void_spec.hpp" />
    <ClInclude Include="boost\mpl\aux_\yes_no.hpp" />
    <ClInclude Include="boost\mpl\back.hpp" />
    <ClInclude Include="boost\mpl\back_fwd.hpp" />
    <ClInclude Include="boost\mpl\back_inserter.hpp" />
    <ClInclude Include="boost\mpl\base.hpp" />
    <ClInclude Include="boost\mpl\begin.hpp" />
    <ClInclude Include="boost\mpl\begin_end.hpp" />
    <ClInclude Include="boost\mpl\begin_end_fwd.hpp" />
    <ClInclude Include="boost\mpl\bind.hpp" />
    <ClInclude Include="boost\mpl\bind_fwd.hpp" />
    <ClInclude Include="boost\mpl\bitand.hpp" />
    <ClInclude Include="boost\mpl\bitor.hpp" />
    <ClInclude Include="boost\mpl\bitwise.hpp" />
    <ClInclude Include="boost\mpl\bitxor.hpp" />
    <ClInclude Include="boost\mpl\bool.hpp" />
    <ClInclude Include="boost\mpl\bool_fwd.hpp" />
    <ClInclude Include="boost\mpl\clear.hpp" />
    <ClInclude Include="boost\mpl\clear_fwd.hpp" />
    <ClInclude Include="boost\mpl\comparison.hpp" />
    <ClInclude Include="boost\mpl\contains.hpp" />
    <ClInclude Include="boost\mpl\contains_fwd.hpp" />
    <ClInclude Include="boost\mpl\copy.hpp" />
    <ClInclude Include="boost\mpl\copy_backward.hpp" />
    <ClInclude Include="boost\mpl\copy_backward_if.hpp" />
    <ClInclude Include="boost\mpl\copy_if.hpp" />
    <ClInclude Include="boost\mpl\count.hpp" />
    <ClInclude Include="boost\mpl\count_fwd.hpp" />
    <ClInclude Include="boost\mpl\count_if.hpp" />
    <ClInclude Include="boost\mpl\deref.hpp" />
    <ClInclude Include="boost\mpl\distance.hpp" />
    <ClInclude Include="boost\mpl\distance_fwd.hpp" />
    <ClInclude Include="boost\mpl\divides.hpp" />
    <ClInclude Include="boost\mpl\empty.hpp" />
    <ClInclude Include="boost\mpl\empty_base.hpp" />
    <ClInclude Include="boost\mpl\empty_fwd.hpp" />
    <ClInclude Include="boost\mpl\end.hpp" />
    <ClInclude Include="boost\mpl\equal.hpp" />
    <ClInclude Include="boost\mpl\equal_to.hpp" />
    <ClInclude Include="boost\mpl\erase.hpp" />
    <ClInclude Include="boost\mpl\erase_fwd.hpp" />
    <ClInclude Include="boost\mpl\erase_key.hpp" />
    <ClInclude Include="boost\mpl\erase_key_fwd.hpp" />
    <ClInclude Include="boost\mpl\eval_if.hpp" />
    <ClInclude Include="boost\mpl\filter_view.hpp" />
    <ClInclude Include="boost\mpl\find.hpp" />
    <ClInclude Include="boost\mpl\find_if.hpp" />
    <ClInclude Include="boost\mpl\fold.hpp" />
    <ClInclude Include="boost\mpl\fold_backward.hpp" />
    <ClInclude Include="boost\mpl\for_each.hpp" />
    <ClInclude Include="boost\mpl\front.hpp" />
    <ClInclude Include="boost\mpl\front_fwd.hpp" />
    <ClInclude Include="boost\mpl\front_inserter.hpp" />
    <ClInclude Include="boost\mpl\greater.hpp" />
    <ClInclude Include="boost\mpl\greater_equal.hpp" />
    <ClInclude Include="boost\mpl\has_key.hpp" />
    <ClInclude Include="boost\mpl\has_key_fwd.hpp" />
    <ClInclude Include="boost\mpl\has_xxx.hpp" />
    <ClInclude Include="boost\mpl\identity.hpp" />
    <ClInclude Include="boost\mpl\if.hpp" />
    <ClInclude Include="boost\mpl\index_if.hpp" />
    <ClInclude Include="boost\mpl\index_of.hpp" />
    <ClInclude Include="boost\mpl\inherit.hpp" />
    <ClInclude Include="boost\mpl\inherit_linearly.hpp" />
    <ClInclude Include="boost\mpl\insert.hpp" />
    <ClInclude Include="boost\mpl\inserter.hpp" />
    <ClInclude Include="boost\mpl\insert_fwd.hpp" />
    <ClInclude Include="boost\mpl\insert_range.hpp" />
    <ClInclude Include="boost\mpl\insert_range_fwd.hpp" />
    <ClInclude Include="boost\mpl\int.hpp" />
    <ClInclude Include="boost\mpl\integral_c.hpp" />
    <ClInclude Include="boost\mpl\integral_c_fwd.hpp" />
    <ClInclude Include="boost\mpl\integral_c_tag.hpp" />
    <ClInclude Include="boost\mpl\int_fwd.hpp" />
    <ClInclude Include="boost\mpl\is_placeholder.hpp" />
    <ClInclude Include="boost\mpl\is_sequence.hpp" />
    <ClInclude Include="boost\mpl\iterator_category.hpp" />
    <ClInclude Include="boost\mpl\iterator_range.hpp" />
    <ClInclude Include="boost\mpl\iterator_tag.hpp" />
    <ClInclude Include="boost\mpl\iterator_tags.hpp" />
    <ClInclude Include="boost\mpl\iter_fold.hpp" />
    <ClInclude Include="boost\mpl\iter_fold_backward.hpp" />
    <ClInclude Include="boost\mpl\iter_fold_if.hpp" />
    <ClInclude Include="boost\mpl\joint_view.hpp" />
    <ClInclude Include="boost\mpl\key_type.hpp" />
    <ClInclude Include="boost\mpl\key_type_fwd.hpp" />
    <ClInclude Include="boost\mpl\lambda.hpp" />
    <ClInclude Include="boost\mpl\lambda_fwd.hpp" />
    <ClInclude Include="boost\mpl\lambda_helper.hpp" />
    <ClInclude Include="boost\mpl\less.hpp" />
    <ClInclude Include="boost\mpl\less_equal.hpp" />
    <ClInclude Include="boost\mpl\limits\arity.hpp" />
    <ClInclude Include="boost\mpl\limits\list.hpp" />
    <ClInclude Include="boost\mpl\limits\map.hpp" />
    <ClInclude Include="boost\mpl\limits\set.hpp" />
    <ClInclude Include="boost\mpl\limits\unrolling.hpp" />
    <ClInclude Include="boost\mpl\limits\vector.hpp" />
    <ClInclude Include="boost\mpl\list.hpp" />
    <ClInclude Include="boost\mpl\list\aux_\begin_end.hpp" />
    <ClInclude Include="boost\mpl\list\aux_\clear.hpp" />
    <ClInclude Include="boost\mpl\list\aux_\empty.hpp" />
    <ClInclude Include="boost\mpl\list\aux_\front.hpp" />
    <ClInclude Include="boost\mpl\list\aux_\include_preprocessed.hpp" />
    <ClInclude Include="boost\mpl\list\aux_\item.hpp" />
    <ClInclude Include="boost\mpl\list\aux_\iterator.hpp" />
    <ClInclude Include="boost\mpl\list\aux_\node.hpp" />
    <ClInclude Include="boost\mpl\list\aux_\numbered.hpp" />
    <ClInclude Include="boost\mpl\list\aux_\numbered_c.hpp" />
    <ClInclude Include="boost\mpl\list\aux_\O1_size.hpp" />
    <ClInclude Include="boost\mpl\list\aux_\pop_front.hpp" />
    <ClInclude Include="boost\mpl\list\aux_\preprocessed\plain\list10.hpp" />
    <ClInclude Include="boost\mpl\list\aux_\preprocessed\plain\list10_c.hpp" />
    <ClInclude Include="boost\mpl\list\aux_\preprocessed\plain\list20.hpp" />
    <ClInclude Include="boost\mpl\list\aux_\preprocessed\plain\list20_c.hpp" />
    <ClInclude Include="boost\mpl\list\aux_\preprocessed\plain\list30.hpp" />
    <ClInclude Include="boost\mpl\list\aux_\preprocessed\plain\list30_c.hpp" />
    <ClInclude Include="boost\mpl\list\aux_\preprocessed\plain\list40.hpp" />
    <ClInclude Include="boost\mpl\list\aux_\preprocessed\plain\list40_c.hpp" />
    <ClInclude Include="boost\mpl\list\aux_\preprocessed\plain\list50.hpp" />
    <ClInclude Include="boost\mpl\list\aux_\preprocessed\plain\list50_c.hpp" />
    <ClInclude Include="boost\mpl\list\aux_\push_back.hpp" />
    <ClInclude Include="boost\mpl\list\aux_\push_front.hpp" />
    <ClInclude Include="boost\mpl\list\aux_\size.hpp" />
    <ClInclude Include="boost\mpl\list\aux_\tag.hpp" />
    <ClInclude Include="boost\mpl\list\list0.hpp" />
    <ClInclude Include="boost\mpl\list\list0_c.hpp" />
    <ClInclude Include="boost\mpl\list\list10.hpp" />
    <ClInclude Include="boost\mpl\list\list10_c.hpp" />
    <ClInclude Include="boost\mpl\list\list20.hpp" />
    <ClInclude Include="boost\mpl\list\list20_c.hpp" />
    <ClInclude Include="boost\mpl\list\list30.hpp" />
    <ClInclude Include="boost\mpl\list\list30_c.hpp" />
    <ClInclude Include="boost\mpl\list\list40.hpp" />
    <ClInclude Include="boost\mpl\list\list40_c.hpp" />
    <ClInclude Include="boost\mpl\list\list50.hpp" />
    <ClInclude Include="boost\mpl\list\list50_c.hpp" />
    <ClInclude Include="boost\mpl\list_c.hpp" />
    <ClInclude Include="boost\mpl\logical.hpp" />
    <ClInclude Include="boost\mpl\long.hpp" />
    <ClInclude Include="boost\mpl\long_fwd.hpp" />
    <ClInclude Include="boost\mpl\lower_bound.hpp" />
    <ClInclude Include="boost\mpl\map.hpp" />
    <ClInclude Include="boost\mpl\max_element.hpp" />
    <ClInclude Include="boost\mpl\minus.hpp" />
    <ClInclude Include="boost\mpl\min_element.hpp" />
    <ClInclude Include="boost\mpl\min_max.hpp" />
    <ClInclude Include="boost\mpl\modulus.hpp" />
    <ClInclude Include="boost\mpl\multiplies.hpp" />
    <ClInclude Include="boost\mpl\negate.hpp" />
    <ClInclude Include="boost\mpl\next.hpp" />
    <ClInclude Include="boost\mpl\next_prior.hpp" />
    <ClInclude Include="boost\mpl\not.hpp" />
    <ClInclude Include="boost\mpl\not_equal_to.hpp" />
    <ClInclude Include="boost\mpl\numeric_cast.hpp" />
    <ClInclude Include="boost\mpl\O1_size.hpp" />
    <ClInclude Include="boost\mpl\O1_size_fwd.hpp" />
    <ClInclude Include="boost\mpl\or.hpp" />
    <ClInclude Include="boost\mpl\order.hpp" />
    <ClInclude Include="boost\mpl\order_fwd.hpp" />
    <ClInclude Include="boost\mpl\pair.hpp" />
    <ClInclude Include="boost\mpl\pair_view.hpp" />
    <ClInclude Include="boost\mpl\partition.hpp" />
    <ClInclude Include="boost\mpl\placeholders.hpp" />
    <ClInclude Include="boost\mpl\plus.hpp" />
    <ClInclude Include="boost\mpl\pop_back.hpp" />
    <ClInclude Include="boost\mpl\pop_back_fwd.hpp" />
    <ClInclude Include="boost\mpl\pop_front.hpp" />
    <ClInclude Include="boost\mpl\pop_front_fwd.hpp" />
    <ClInclude Include="boost\mpl\prev.hpp" />
    <ClInclude Include="boost\mpl\print.hpp" />
    <ClInclude Include="boost\mpl\prior.hpp" />
    <ClInclude Include="boost\mpl\project1st.hpp" />
    <ClInclude Include="boost\mpl\project2nd.hpp" />
    <ClInclude Include="boost\mpl\protect.hpp" />
    <ClInclude Include="boost\mpl\push_back.hpp" />
    <ClInclude Include="boost\mpl\push_back_fwd.hpp" />
    <ClInclude Include="boost\mpl\push_front.hpp" />
    <ClInclude Include="boost\mpl\push_front_fwd.hpp" />
    <ClInclude Include="boost\mpl\quote.hpp" />
    <ClInclude Include="boost\mpl\range_c.hpp" />
    <ClInclude Include="boost\mpl\remove.hpp" />
    <ClInclude Include="boost\mpl\remove_if.hpp" />
    <ClInclude Include="boost\mpl\replace.hpp" />
    <ClInclude Include="boost\mpl\replace_if.hpp" />
    <ClInclude Include="boost\mpl\reverse.hpp" />
    <ClInclude Include="boost\mpl\reverse_fold.hpp" />
    <ClInclude Include="boost\mpl\reverse_iter_fold.hpp" />
    <ClInclude Include="boost\mpl\same_as.hpp" />
    <ClInclude Include="boost\mpl\select1st.hpp" />
    <ClInclude Include="boost\mpl\select2nd.hpp" />
    <ClInclude Include="boost\mpl\sequence_tag.hpp" />
    <ClInclude Include="boost\mpl\sequence_tag_fwd.hpp" />
    <ClInclude Include="boost\mpl\set.hpp" />
    <ClInclude Include="boost\mpl\shift_left.hpp" />
    <ClInclude Include="boost\mpl\shift_right.hpp" />
    <ClInclude Include="boost\mpl\single_view.hpp" />
    <ClInclude Include="boost\mpl\size.hpp" />
    <ClInclude Include="boost\mpl\sizeof.hpp" />
    <ClInclude Include="boost\mpl\size_fwd.hpp" />
    <ClInclude Include="boost\mpl\size_t.hpp" />
    <ClInclude Include="boost\mpl\size_t_fwd.hpp" />
    <ClInclude Include="boost\mpl\sort.hpp" />
    <ClInclude Include="boost\mpl\sort_fwd.hpp" />
    <ClInclude Include="boost\mpl\stable_partition.hpp" />
    <ClInclude Include="boost\mpl\switch.hpp" />
    <ClInclude Include="boost\mpl\tag.hpp" />
    <ClInclude Include="boost\mpl\times.hpp" />
    <ClInclude Include="boost\mpl\transform.hpp" />
    <ClInclude Include="boost\mpl\transform_view.hpp" />
    <ClInclude Include="boost\mpl\unique.hpp" />
    <ClInclude Include="boost\mpl\unpack_args.hpp" />
    <ClInclude Include="boost\mpl\upper_bound.hpp" />
    <ClInclude Include="boost\mpl\value_type.hpp" />
    <ClInclude Include="boost\mpl\value_type_fwd.hpp" />
    <ClInclude Include="boost\mpl\vector.hpp" />
    <ClInclude Include="boost\mpl\vector\aux_\at.hpp" />
    <ClInclude Include="boost\mpl\vector\aux_\back.hpp" />
    <ClInclude Include="boost\mpl\vector\aux_\begin_end.hpp" />
    <ClInclude Include="boost\mpl\vector\aux_\clear.hpp" />
    <ClInclude Include="boost\mpl\vector\aux_\empty.hpp" />
    <ClInclude Include="boost\mpl\vector\aux_\front.hpp" />
    <ClInclude Include="boost\mpl\vector\aux_\include_preprocessed.hpp" />
    <ClInclude Include="boost\mpl\vector\aux_\item.hpp" />
    <ClInclude Include="boost\mpl\vector\aux_\iterator.hpp" />
    <ClInclude Include="boost\mpl\vector\aux_\node.hpp" />
    <ClInclude Include="boost\mpl\vector\aux_\numbered.hpp" />
    <ClInclude Include="boost\mpl\vector\aux_\numbered_c.hpp" />
    <ClInclude Include="boost\mpl\vector\aux_\O1_size.hpp" />
    <ClInclude Include="boost\mpl\vector\aux_\pop_back.hpp" />
    <ClInclude Include="boost\mpl\vector\aux_\pop_front.hpp" />
    <ClInclude Include="boost\mpl\vector\aux_\preprocessed\plain\vector10.hpp" />
    <ClInclude Include="boost\mpl\vector\aux_\preprocessed\plain\vector10_c.hpp" />
    <ClInclude Include="boost\mpl\vector\aux_\preprocessed\plain\vector20.hpp" />
    <ClInclude Include="boost\mpl\vector\aux_\preprocessed\plain\vector20_c.hpp" />
    <ClInclude Include="boost\mpl\vector\aux_\preprocessed\plain\vector30.hpp" />
    <ClInclude Include="boost\mpl\vector\aux_\preprocessed\plain\vector30_c.hpp" />
    <ClInclude Include="boost\mpl\vector\aux_\preprocessed\plain\vector40.hpp" />
    <ClInclude Include="boost\mpl\vector\aux_\preprocessed\plain\vector40_c.hpp" />
    <ClInclude Include="boost\mpl\vector\aux_\preprocessed\plain\vector50.hpp" />
    <ClInclude Include="boost\mpl\vector\aux_\preprocessed\plain\vector50_c.hpp" />
    <ClInclude Include="boost\mpl\vector\aux_\push_back.hpp" />
    <ClInclude Include="boost\mpl\vector\aux_\push_front.hpp" />
    <ClInclude Include="boost\mpl\vector\aux_\size.hpp" />
    <ClInclude Include="boost\mpl\vector\aux_\tag.hpp" />
    <ClInclude Include="boost\mpl\vector\aux_\vector0.hpp" />
    <ClInclude Include="boost\mpl\vector\vector0.hpp" />
    <ClInclude Include="boost\mpl\vector\vector0_c.hpp" />
    <ClInclude Include="boost\mpl\vector\vector10.hpp" />
    <ClInclude Include="boost\mpl\vector\vector10_c.hpp" />
    <ClInclude Include="boost\mpl\vector\vector20.hpp" />
    <ClInclude Include="boost\mpl\vector\vector20_c.hpp" />
    <ClInclude Include="boost\mpl\vector\vector30.hpp" />
    <ClInclude Include="boost\mpl\vector\vector30_c.hpp" />
    <ClInclude Include="boost\mpl\vector\vector40.hpp" />
    <ClInclude Include="boost\mpl\vector\vector40_c.hpp" />
    <ClInclude Include="boost\mpl\vector\vector50.hpp" />
    <ClInclude Include="boost\mpl\vector\vector50_c.hpp" />
    <ClInclude Include="boost\mpl\vector_c.hpp" />
    <ClInclude Include="boost\mpl\void.hpp" />
    <ClInclude Include="boost\mpl\void_fwd.hpp" />
    <ClInclude Include="boost\mpl\zip_view.hpp" />
    <ClInclude Include="boost\multi_array.hpp" />
    <ClInclude Include="boost\multi_index_container.hpp" />
    <ClInclude Include="boost\multi_index_container_fwd.hpp" />
    <ClInclude Include="boost\next_prior.hpp" />
    <ClInclude Include="boost\noncopyable.hpp" />
    <ClInclude Include="boost\nondet_random.hpp" />
    <ClInclude Include="boost\none.hpp" />
    <ClInclude Include="boost\non_type.hpp" />
    <ClInclude Include="boost\operators.hpp" />
    <ClInclude Include="boost\optional.hpp" />
    <ClInclude Include="boost\pending\bucket_sorter.hpp" />
    <ClInclude Include="boost\pending\container_traits.hpp" />
    <ClInclude Include="boost\pending\cstddef.hpp" />
    <ClInclude Include="boost\pending\ct_if.hpp" />
    <ClInclude Include="boost\pending\detail\disjoint_sets.hpp" />
    <ClInclude Include="boost\pending\detail\int_iterator.hpp" />
    <ClInclude Include="boost\pending\detail\property.hpp" />
    <ClInclude Include="boost\pending\disjoint_sets.hpp" />
    <ClInclude Include="boost\pending\fenced_priority_queue.hpp" />
    <ClInclude Include="boost\pending\fibonacci_heap.hpp" />
    <ClInclude Include="boost\pending\indirect_cmp.hpp" />
    <ClInclude Include="boost\pending\integer_log2.hpp" />
    <ClInclude Include="boost\pending\integer_range.hpp" />
    <ClInclude Include="boost\pending\is_heap.hpp" />
    <ClInclude Include="boost\pending\iterator_adaptors.hpp" />
    <ClInclude Include="boost\pending\iterator_tests.hpp" />
    <ClInclude Include="boost\pending\lowest_bit.hpp" />
    <ClInclude Include="boost\pending\mutable_heap.hpp" />
    <ClInclude Include="boost\pending\mutable_queue.hpp" />
    <ClInclude Include="boost\pending\property.hpp" />
    <ClInclude Include="boost\pending\queue.hpp" />
    <ClInclude Include="boost\pending\stringtok.hpp" />
    <ClInclude Include="boost\permutation_iterator.hpp" />
    <ClInclude Include="boost\pfto.hpp" />
    <ClInclude Include="boost\pointee.hpp" />
    <ClInclude Include="boost\preprocessor.hpp" />
    <ClInclude Include="boost\preprocessor\arithmetic.hpp" />
    <ClInclude Include="boost\preprocessor\arithmetic\add.hpp" />
    <ClInclude Include="boost\preprocessor\arithmetic\dec.hpp" />
    <ClInclude Include="boost\preprocessor\arithmetic\detail\div_base.hpp" />
    <ClInclude Include="boost\preprocessor\arithmetic\div.hpp" />
    <ClInclude Include="boost\preprocessor\arithmetic\inc.hpp" />
    <ClInclude Include="boost\preprocessor\arithmetic\mod.hpp" />
    <ClInclude Include="boost\preprocessor\arithmetic\mul.hpp" />
    <ClInclude Include="boost\preprocessor\arithmetic\sub.hpp" />
    <ClInclude Include="boost\preprocessor\array.hpp" />
    <ClInclude Include="boost\preprocessor\array\data.hpp" />
    <ClInclude Include="boost\preprocessor\array\elem.hpp" />
    <ClInclude Include="boost\preprocessor\array\insert.hpp" />
    <ClInclude Include="boost\preprocessor\array\pop_back.hpp" />
    <ClInclude Include="boost\preprocessor\array\pop_front.hpp" />
    <ClInclude Include="boost\preprocessor\array\push_back.hpp" />
    <ClInclude Include="boost\preprocessor\array\push_front.hpp" />
    <ClInclude Include="boost\preprocessor\array\remove.hpp" />
    <ClInclude Include="boost\preprocessor\array\replace.hpp" />
    <ClInclude Include="boost\preprocessor\array\reverse.hpp" />
    <ClInclude Include="boost\preprocessor\array\size.hpp" />
    <ClInclude Include="boost\preprocessor\assert_msg.hpp" />
    <ClInclude Include="boost\preprocessor\cat.hpp" />
    <ClInclude Include="boost\preprocessor\comma.hpp" />
    <ClInclude Include="boost\preprocessor\comma_if.hpp" />
    <ClInclude Include="boost\preprocessor\comparison.hpp" />
    <ClInclude Include="boost\preprocessor\comparison\equal.hpp" />
    <ClInclude Include="boost\preprocessor\comparison\greater.hpp" />
    <ClInclude Include="boost\preprocessor\comparison\greater_equal.hpp" />
    <ClInclude Include="boost\preprocessor\comparison\less.hpp" />
    <ClInclude Include="boost\preprocessor\comparison\less_equal.hpp" />
    <ClInclude Include="boost\preprocessor\comparison\not_equal.hpp" />
    <ClInclude Include="boost\preprocessor\config\config.hpp" />
    <ClInclude Include="boost\preprocessor\config\limits.hpp" />
    <ClInclude Include="boost\preprocessor\control.hpp" />
    <ClInclude Include="boost\preprocessor\control\deduce_d.hpp" />
    <ClInclude Include="boost\preprocessor\control\detail\msvc\while.hpp" />
    <ClInclude Include="boost\preprocessor\control\expr_if.hpp" />
    <ClInclude Include="boost\preprocessor\control\expr_iif.hpp" />
    <ClInclude Include="boost\preprocessor\control\if.hpp" />
    <ClInclude Include="boost\preprocessor\control\iif.hpp" />
    <ClInclude Include="boost\preprocessor\control\while.hpp" />
    <ClInclude Include="boost\preprocessor\debug.hpp" />
    <ClInclude Include="boost\preprocessor\debug\assert.hpp" />
    <ClInclude Include="boost\preprocessor\debug\error.hpp" />
    <ClInclude Include="boost\preprocessor\debug\line.hpp" />
    <ClInclude Include="boost\preprocessor\dec.hpp" />
    <ClInclude Include="boost\preprocessor\detail\auto_rec.hpp" />
    <ClInclude Include="boost\preprocessor\detail\check.hpp" />
    <ClInclude Include="boost\preprocessor\detail\dmc\auto_rec.hpp" />
    <ClInclude Include="boost\preprocessor\detail\is_binary.hpp" />
    <ClInclude Include="boost\preprocessor\detail\is_nullary.hpp" />
    <ClInclude Include="boost\preprocessor\detail\is_unary.hpp" />
    <ClInclude Include="boost\preprocessor\detail\null.hpp" />
    <ClInclude Include="boost\preprocessor\detail\split.hpp" />
    <ClInclude Include="boost\preprocessor\empty.hpp" />
    <ClInclude Include="boost\preprocessor\enum.hpp" />
    <ClInclude Include="boost\preprocessor\enum_params.hpp" />
    <ClInclude Include="boost\preprocessor\enum_params_with_a_default.hpp" />
    <ClInclude Include="boost\preprocessor\enum_params_with_defaults.hpp" />
    <ClInclude Include="boost\preprocessor\enum_shifted.hpp" />
    <ClInclude Include="boost\preprocessor\enum_shifted_params.hpp" />
    <ClInclude Include="boost\preprocessor\expand.hpp" />
    <ClInclude Include="boost\preprocessor\expr_if.hpp" />
    <ClInclude Include="boost\preprocessor\facilities.hpp" />
    <ClInclude Include="boost\preprocessor\facilities\apply.hpp" />
    <ClInclude Include="boost\preprocessor\facilities\empty.hpp" />
    <ClInclude Include="boost\preprocessor\facilities\expand.hpp" />
    <ClInclude Include="boost\preprocessor\facilities\identity.hpp" />
    <ClInclude Include="boost\preprocessor\facilities\intercept.hpp" />
    <ClInclude Include="boost\preprocessor\facilities\is_1.hpp" />
    <ClInclude Include="boost\preprocessor\facilities\is_empty.hpp" />
    <ClInclude Include="boost\preprocessor\facilities\is_empty_or_1.hpp" />
    <ClInclude Include="boost\preprocessor\for.hpp" />
    <ClInclude Include="boost\preprocessor\identity.hpp" />
    <ClInclude Include="boost\preprocessor\if.hpp" />
    <ClInclude Include="boost\preprocessor\inc.hpp" />
    <ClInclude Include="boost\preprocessor\iterate.hpp" />
    <ClInclude Include="boost\preprocessor\iteration.hpp" />
    <ClInclude Include="boost\preprocessor\iteration\detail\bounds\lower1.hpp" />
    <ClInclude Include="boost\preprocessor\iteration\detail\bounds\lower2.hpp" />
    <ClInclude Include="boost\preprocessor\iteration\detail\bounds\lower3.hpp" />
    <ClInclude Include="boost\preprocessor\iteration\detail\bounds\lower4.hpp" />
    <ClInclude Include="boost\preprocessor\iteration\detail\bounds\lower5.hpp" />
    <ClInclude Include="boost\preprocessor\iteration\detail\bounds\upper1.hpp" />
    <ClInclude Include="boost\preprocessor\iteration\detail\bounds\upper2.hpp" />
    <ClInclude Include="boost\preprocessor\iteration\detail\bounds\upper3.hpp" />
    <ClInclude Include="boost\preprocessor\iteration\detail\bounds\upper4.hpp" />
    <ClInclude Include="boost\preprocessor\iteration\detail\bounds\upper5.hpp" />
    <ClInclude Include="boost\preprocessor\iteration\detail\finish.hpp" />
    <ClInclude Include="boost\preprocessor\iteration\detail\iter\forward1.hpp" />
    <ClInclude Include="boost\preprocessor\iteration\detail\iter\forward2.hpp" />
    <ClInclude Include="boost\preprocessor\iteration\detail\iter\forward3.hpp" />
    <ClInclude Include="boost\preprocessor\iteration\detail\iter\forward4.hpp" />
    <ClInclude Include="boost\preprocessor\iteration\detail\iter\forward5.hpp" />
    <ClInclude Include="boost\preprocessor\iteration\detail\iter\reverse1.hpp" />
    <ClInclude Include="boost\preprocessor\iteration\detail\iter\reverse2.hpp" />
    <ClInclude Include="boost\preprocessor\iteration\detail\iter\reverse3.hpp" />
    <ClInclude Include="boost\preprocessor\iteration\detail\iter\reverse4.hpp" />
    <ClInclude Include="boost\preprocessor\iteration\detail\iter\reverse5.hpp" />
    <ClInclude Include="boost\preprocessor\iteration\detail\local.hpp" />
    <ClInclude Include="boost\preprocessor\iteration\detail\rlocal.hpp" />
    <ClInclude Include="boost\preprocessor\iteration\detail\self.hpp" />
    <ClInclude Include="boost\preprocessor\iteration\detail\start.hpp" />
    <ClInclude Include="boost\preprocessor\iteration\iterate.hpp" />
    <ClInclude Include="boost\preprocessor\iteration\local.hpp" />
    <ClInclude Include="boost\preprocessor\iteration\self.hpp" />
    <ClInclude Include="boost\preprocessor\library.hpp" />
    <ClInclude Include="boost\preprocessor\limits.hpp" />
    <ClInclude Include="boost\preprocessor\list.hpp" />
    <ClInclude Include="boost\preprocessor\list\adt.hpp" />
    <ClInclude Include="boost\preprocessor\list\append.hpp" />
    <ClInclude Include="boost\preprocessor\list\at.hpp" />
    <ClInclude Include="boost\preprocessor\list\cat.hpp" />
    <ClInclude Include="boost\preprocessor\list\detail\dmc\fold_left.hpp" />
    <ClInclude Include="boost\preprocessor\list\detail\edg\fold_left.hpp" />
    <ClInclude Include="boost\preprocessor\list\detail\edg\fold_right.hpp" />
    <ClInclude Include="boost\preprocessor\list\detail\fold_left.hpp" />
    <ClInclude Include="boost\preprocessor\list\detail\fold_right.hpp" />
    <ClInclude Include="boost\preprocessor\list\enum.hpp" />
    <ClInclude Include="boost\preprocessor\list\filter.hpp" />
    <ClInclude Include="boost\preprocessor\list\first_n.hpp" />
    <ClInclude Include="boost\preprocessor\list\fold_left.hpp" />
    <ClInclude Include="boost\preprocessor\list\fold_right.hpp" />
    <ClInclude Include="boost\preprocessor\list\for_each.hpp" />
    <ClInclude Include="boost\preprocessor\list\for_each_i.hpp" />
    <ClInclude Include="boost\preprocessor\list\for_each_product.hpp" />
    <ClInclude Include="boost\preprocessor\list\rest_n.hpp" />
    <ClInclude Include="boost\preprocessor\list\reverse.hpp" />
    <ClInclude Include="boost\preprocessor\list\size.hpp" />
    <ClInclude Include="boost\preprocessor\list\to_tuple.hpp" />
    <ClInclude Include="boost\preprocessor\list\transform.hpp" />
    <ClInclude Include="boost\preprocessor\logical.hpp" />
    <ClInclude Include="boost\preprocessor\logical\and.hpp" />
    <ClInclude Include="boost\preprocessor\logical\bitand.hpp" />
    <ClInclude Include="boost\preprocessor\logical\bitnor.hpp" />
    <ClInclude Include="boost\preprocessor\logical\bitor.hpp" />
    <ClInclude Include="boost\preprocessor\logical\bitxor.hpp" />
    <ClInclude Include="boost\preprocessor\logical\bool.hpp" />
    <ClInclude Include="boost\preprocessor\logical\compl.hpp" />
    <ClInclude Include="boost\preprocessor\logical\nor.hpp" />
    <ClInclude Include="boost\preprocessor\logical\not.hpp" />
    <ClInclude Include="boost\preprocessor\logical\or.hpp" />
    <ClInclude Include="boost\preprocessor\logical\xor.hpp" />
    <ClInclude Include="boost\preprocessor\max.hpp" />
    <ClInclude Include="boost\preprocessor\min.hpp" />
    <ClInclude Include="boost\preprocessor\punctuation.hpp" />
    <ClInclude Include="boost\preprocessor\punctuation\comma.hpp" />
    <ClInclude Include="boost\preprocessor\punctuation\comma_if.hpp" />
    <ClInclude Include="boost\preprocessor\punctuation\paren.hpp" />
    <ClInclude Include="boost\preprocessor\punctuation\paren_if.hpp" />
    <ClInclude Include="boost\preprocessor\repeat.hpp" />
    <ClInclude Include="boost\preprocessor\repeat_2nd.hpp" />
    <ClInclude Include="boost\preprocessor\repeat_3rd.hpp" />
    <ClInclude Include="boost\preprocessor\repeat_from_to.hpp" />
    <ClInclude Include="boost\preprocessor\repeat_from_to_2nd.hpp" />
    <ClInclude Include="boost\preprocessor\repeat_from_to_3rd.hpp" />
    <ClInclude Include="boost\preprocessor\repetition.hpp" />
    <ClInclude Include="boost\preprocessor\repetition\deduce_r.hpp" />
    <ClInclude Include="boost\preprocessor\repetition\deduce_z.hpp" />
    <ClInclude Include="boost\preprocessor\repetition\detail\msvc\for.hpp" />
    <ClInclude Include="boost\preprocessor\repetition\enum.hpp" />
    <ClInclude Include="boost\preprocessor\repetition\enum_binary_params.hpp" />
    <ClInclude Include="boost\preprocessor\repetition\enum_params.hpp" />
    <ClInclude Include="boost\preprocessor\repetition\enum_params_with_a_default.hpp" />
    <ClInclude Include="boost\preprocessor\repetition\enum_params_with_defaults.hpp" />
    <ClInclude Include="boost\preprocessor\repetition\enum_shifted.hpp" />
    <ClInclude Include="boost\preprocessor\repetition\enum_shifted_params.hpp" />
    <ClInclude Include="boost\preprocessor\repetition\enum_trailing.hpp" />
    <ClInclude Include="boost\preprocessor\repetition\enum_trailing_binary_params.hpp" />
    <ClInclude Include="boost\preprocessor\repetition\enum_trailing_params.hpp" />
    <ClInclude Include="boost\preprocessor\repetition\for.hpp" />
    <ClInclude Include="boost\preprocessor\repetition\repeat.hpp" />
    <ClInclude Include="boost\preprocessor\repetition\repeat_from_to.hpp" />
    <ClInclude Include="boost\preprocessor\selection.hpp" />
    <ClInclude Include="boost\preprocessor\selection\max.hpp" />
    <ClInclude Include="boost\preprocessor\selection\min.hpp" />
    <ClInclude Include="boost\preprocessor\seq.hpp" />
    <ClInclude Include="boost\preprocessor\slot.hpp" />
    <ClInclude Include="boost\preprocessor\slot\detail\def.hpp" />
    <ClInclude Include="boost\preprocessor\slot\detail\shared.hpp" />
    <ClInclude Include="boost\preprocessor\slot\detail\slot1.hpp" />
    <ClInclude Include="boost\preprocessor\slot\detail\slot2.hpp" />
    <ClInclude Include="boost\preprocessor\slot\detail\slot3.hpp" />
    <ClInclude Include="boost\preprocessor\slot\detail\slot4.hpp" />
    <ClInclude Include="boost\preprocessor\slot\detail\slot5.hpp" />
    <ClInclude Include="boost\preprocessor\slot\slot.hpp" />
    <ClInclude Include="boost\preprocessor\stringize.hpp" />
    <ClInclude Include="boost\preprocessor\tuple.hpp" />
    <ClInclude Include="boost\preprocessor\tuple\eat.hpp" />
    <ClInclude Include="boost\preprocessor\tuple\elem.hpp" />
    <ClInclude Include="boost\preprocessor\tuple\rem.hpp" />
    <ClInclude Include="boost\preprocessor\tuple\reverse.hpp" />
    <ClInclude Include="boost\preprocessor\tuple\to_list.hpp" />
    <ClInclude Include="boost\preprocessor\tuple\to_seq.hpp" />
    <ClInclude Include="boost\preprocessor\while.hpp" />
    <ClInclude Include="boost\preprocessor\wstringize.hpp" />
    <ClInclude Include="boost\program_options.hpp" />
    <ClInclude Include="boost\progress.hpp" />
    <ClInclude Include="boost\property_map.hpp" />
    <ClInclude Include="boost\property_map_iterator.hpp" />
    <ClInclude Include="boost\python.hpp" />
    <ClInclude Include="boost\random.hpp" />
    <ClInclude Include="boost\range.hpp" />
    <ClInclude Include="boost\rational.hpp" />
    <ClInclude Include="boost\ref.hpp" />
    <ClInclude Include="boost\regex.h" />
    <ClInclude Include="boost\regex.hpp" />
    <ClInclude Include="boost\regex_fwd.hpp" />
    <ClInclude Include="boost\scoped_array.hpp" />
    <ClInclude Include="boost\scoped_ptr.hpp" />
    <ClInclude Include="boost\shared_array.hpp" />
    <ClInclude Include="boost\shared_container_iterator.hpp" />
    <ClInclude Include="boost\shared_ptr.hpp" />
    <ClInclude Include="boost\signal.hpp" />
    <ClInclude Include="boost\signals.hpp" />
    <ClInclude Include="boost\signals\connection.hpp" />
    <ClInclude Include="boost\signals\detail\config.hpp" />
    <ClInclude Include="boost\signals\detail\named_slot_map.hpp" />
    <ClInclude Include="boost\signals\detail\signals_common.hpp" />
    <ClInclude Include="boost\signals\detail\signal_base.hpp" />
    <ClInclude Include="boost\signals\detail\slot_call_iterator.hpp" />
    <ClInclude Include="boost\signals\signal0.hpp" />
    <ClInclude Include="boost\signals\signal1.hpp" />
    <ClInclude Include="boost\signals\signal10.hpp" />
    <ClInclude Include="boost\signals\signal2.hpp" />
    <ClInclude Include="boost\signals\signal3.hpp" />
    <ClInclude Include="boost\signals\signal4.hpp" />
    <ClInclude Include="boost\signals\signal5.hpp" />
    <ClInclude Include="boost\signals\signal6.hpp" />
    <ClInclude Include="boost\signals\signal7.hpp" />
    <ClInclude Include="boost\signals\signal8.hpp" />
    <ClInclude Include="boost\signals\signal9.hpp" />
    <ClInclude Include="boost\signals\signal_template.hpp" />
    <ClInclude Include="boost\signals\slot.hpp" />
    <ClInclude Include="boost\signals\trackable.hpp" />
    <ClInclude Include="boost\smart_cast.hpp" />
    <ClInclude Include="boost\smart_ptr.hpp" />
    <ClInclude Include="boost\spirit.hpp" />
    <ClInclude Include="boost\state_saver.hpp" />
    <ClInclude Include="boost\static_assert.hpp" />
    <ClInclude Include="boost\static_warning.hpp" />
    <ClInclude Include="boost\strong_typedef.hpp" />
    <ClInclude Include="boost\thread.hpp" />
    <ClInclude Include="boost\throw_exception.hpp" />
    <ClInclude Include="boost\timer.hpp" />
    <ClInclude Include="boost\tokenizer.hpp" />
    <ClInclude Include="boost\token_functions.hpp" />
    <ClInclude Include="boost\token_iterator.hpp" />
    <ClInclude Include="boost\tuple\detail\tuple_basic.hpp" />
    <ClInclude Include="boost\tuple\detail\tuple_basic_no_partial_spec.hpp" />
    <ClInclude Include="boost\tuple\tuple.hpp" />
    <ClInclude Include="boost\tuple\tuple_comparison.hpp" />
    <ClInclude Include="boost\tuple\tuple_io.hpp" />
    <ClInclude Include="boost\type.hpp" />
    <ClInclude Include="boost\type_traits.hpp" />
    <ClInclude Include="boost\type_traits\add_const.hpp" />
    <ClInclude Include="boost\type_traits\add_cv.hpp" />
    <ClInclude Include="boost\type_traits\add_pointer.hpp" />
    <ClInclude Include="boost\type_traits\add_reference.hpp" />
    <ClInclude Include="boost\type_traits\add_volatile.hpp" />
    <ClInclude Include="boost\type_traits\alignment_of.hpp" />
    <ClInclude Include="boost\type_traits\alignment_traits.hpp" />
    <ClInclude Include="boost\type_traits\arithmetic_traits.hpp" />
    <ClInclude Include="boost\type_traits\array_traits.hpp" />
    <ClInclude Include="boost\type_traits\broken_compiler_spec.hpp" />
    <ClInclude Include="boost\type_traits\composite_traits.hpp" />
    <ClInclude Include="boost\type_traits\config.hpp" />
    <ClInclude Include="boost\type_traits\conversion_traits.hpp" />
    <ClInclude Include="boost\type_traits\cv_traits.hpp" />
    <ClInclude Include="boost\type_traits\detail\bool_trait_def.hpp" />
    <ClInclude Include="boost\type_traits\detail\bool_trait_undef.hpp" />
    <ClInclude Include="boost\type_traits\detail\cv_traits_impl.hpp" />
    <ClInclude Include="boost\type_traits\detail\false_result.hpp" />
    <ClInclude Include="boost\type_traits\detail\ice_and.hpp" />
    <ClInclude Include="boost\type_traits\detail\ice_eq.hpp" />
    <ClInclude Include="boost\type_traits\detail\ice_not.hpp" />
    <ClInclude Include="boost\type_traits\detail\ice_or.hpp" />
    <ClInclude Include="boost\type_traits\detail\is_function_ptr_helper.hpp" />
    <ClInclude Include="boost\type_traits\detail\is_function_ptr_tester.hpp" />
    <ClInclude Include="boost\type_traits\detail\is_function_type_tester.hpp" />
    <ClInclude Include="boost\type_traits\detail\is_mem_fun_pointer_impl.hpp" />
    <ClInclude Include="boost\type_traits\detail\is_mem_fun_pointer_tester.hpp" />
    <ClInclude Include="boost\type_traits\detail\size_t_trait_def.hpp" />
    <ClInclude Include="boost\type_traits\detail\size_t_trait_undef.hpp" />
    <ClInclude Include="boost\type_traits\detail\template_arity_spec.hpp" />
    <ClInclude Include="boost\type_traits\detail\type_trait_def.hpp" />
    <ClInclude Include="boost\type_traits\detail\type_trait_undef.hpp" />
    <ClInclude Include="boost\type_traits\detail\wrap.hpp" />
    <ClInclude Include="boost\type_traits\detail\yes_no_type.hpp" />
    <ClInclude Include="boost\type_traits\function_traits.hpp" />
    <ClInclude Include="boost\type_traits\has_nothrow_assign.hpp" />
    <ClInclude Include="boost\type_traits\has_nothrow_constructor.hpp" />
    <ClInclude Include="boost\type_traits\has_nothrow_copy.hpp" />
    <ClInclude Include="boost\type_traits\has_nothrow_destructor.hpp" />
    <ClInclude Include="boost\type_traits\has_trivial_assign.hpp" />
    <ClInclude Include="boost\type_traits\has_trivial_constructor.hpp" />
    <ClInclude Include="boost\type_traits\has_trivial_copy.hpp" />
    <ClInclude Include="boost\type_traits\has_trivial_destructor.hpp" />
    <ClInclude Include="boost\type_traits\ice.hpp" />
    <ClInclude Include="boost\type_traits\intrinsics.hpp" />
    <ClInclude Include="boost\type_traits\is_abstract.hpp" />
    <ClInclude Include="boost\type_traits\is_arithmetic.hpp" />
    <ClInclude Include="boost\type_traits\is_array.hpp" />
    <ClInclude Include="boost\type_traits\is_base_and_derived.hpp" />
    <ClInclude Include="boost\type_traits\is_class.hpp" />
    <ClInclude Include="boost\type_traits\is_compound.hpp" />
    <ClInclude Include="boost\type_traits\is_const.hpp" />
    <ClInclude Include="boost\type_traits\is_convertible.hpp" />
    <ClInclude Include="boost\type_traits\is_empty.hpp" />
    <ClInclude Include="boost\type_traits\is_enum.hpp" />
    <ClInclude Include="boost\type_traits\is_float.hpp" />
    <ClInclude Include="boost\type_traits\is_function.hpp" />
    <ClInclude Include="boost\type_traits\is_fundamental.hpp" />
    <ClInclude Include="boost\type_traits\is_integral.hpp" />
    <ClInclude Include="boost\type_traits\is_member_function_pointer.hpp" />
    <ClInclude Include="boost\type_traits\is_member_pointer.hpp" />
    <ClInclude Include="boost\type_traits\is_object.hpp" />
    <ClInclude Include="boost\type_traits\is_pod.hpp" />
    <ClInclude Include="boost\type_traits\is_pointer.hpp" />
    <ClInclude Include="boost\type_traits\is_polymorphic.hpp" />
    <ClInclude Include="boost\type_traits\is_reference.hpp" />
    <ClInclude Include="boost\type_traits\is_same.hpp" />
    <ClInclude Include="boost\type_traits\is_scalar.hpp" />
    <ClInclude Include="boost\type_traits\is_stateless.hpp" />
    <ClInclude Include="boost\type_traits\is_union.hpp" />
    <ClInclude Include="boost\type_traits\is_void.hpp" />
    <ClInclude Include="boost\type_traits\is_volatile.hpp" />
    <ClInclude Include="boost\type_traits\object_traits.hpp" />
    <ClInclude Include="boost\type_traits\reference_traits.hpp" />
    <ClInclude Include="boost\type_traits\remove_bounds.hpp" />
    <ClInclude Include="boost\type_traits\remove_const.hpp" />
    <ClInclude Include="boost\type_traits\remove_cv.hpp" />
    <ClInclude Include="boost\type_traits\remove_pointer.hpp" />
    <ClInclude Include="boost\type_traits\remove_reference.hpp" />
    <ClInclude Include="boost\type_traits\remove_volatile.hpp" />
    <ClInclude Include="boost\type_traits\same_traits.hpp" />
    <ClInclude Include="boost\type_traits\transform_traits.hpp" />
    <ClInclude Include="boost\type_traits\transform_traits_spec.hpp" />
    <ClInclude Include="boost\type_traits\type_traits_test.hpp" />
    <ClInclude Include="boost\type_traits\type_with_alignment.hpp" />
    <ClInclude Include="boost\utf8_codecvt_facet.hpp" />
    <ClInclude Include="boost\utility.hpp" />
    <ClInclude Include="boost\utility\addressof.hpp" />
    <ClInclude Include="boost\utility\base_from_member.hpp" />
    <ClInclude Include="boost\utility\compare_pointees.hpp" />
    <ClInclude Include="boost\utility\detail\in_place_factory_prefix.hpp" />
    <ClInclude Include="boost\utility\detail\in_place_factory_suffix.hpp" />
    <ClInclude Include="boost\utility\detail\result_of_iterate.hpp" />
    <ClInclude Include="boost\utility\enable_if.hpp" />
    <ClInclude Include="boost\utility\result_of.hpp" />
    <ClInclude Include="boost\utility\value_init.hpp" />
    <ClInclude Include="boost\utility_fwd.hpp" />
    <ClInclude Include="boost\variant.hpp" />
    <ClInclude Include="boost\vector_property_map.hpp" />
    <ClInclude Include="boost\version.hpp" />
    <ClInclude Include="boost\visit_each.hpp" />
    <ClInclude Include="boost\weak_ptr.hpp" />
  </ItemGroup>
  <ItemGroup>
    <ClCompile Include="libs\filesystem\src\convenience.cpp" />
    <ClCompile Include="libs\filesystem\src\exception.cpp" />
    <ClCompile Include="libs\filesystem\src\operations_posix_windows.cpp" />
    <ClCompile Include="libs\filesystem\src\path_posix_windows.cpp" />
    <ClCompile Include="libs\signals\src\connection.cpp" />
    <ClCompile Include="libs\signals\src\named_slot_map.cpp" />
    <ClCompile Include="libs\signals\src\signal_base.cpp" />
    <ClCompile Include="libs\signals\src\slot.cpp" />
    <ClCompile Include="libs\signals\src\trackable.cpp" />
  </ItemGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.targets" />
  <ImportGroup Label="ExtensionTargets">
  </ImportGroup>
</Project>